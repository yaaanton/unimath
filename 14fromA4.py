import numpy as np
import numpy.linalg

np.set_printoptions(precision=3)


a11 = 0.2;   a12 = 0.1;   a13 = 0.2
a21 = 0.1;   a22 = 0.2;   a23 = 0.1
a31 = 0.1;   a32 = 1;   a33 = 0.1

y1 = 100
y2 = 120
y3 = 140

b11 = 2;   b12 = 0;   b13 = 1.9
b21 = 0.6;   b22 = 0;     b23 = 1.5
b31 = 0.5;   b32 = 0.7;   b33 = 1.3

c1=7
c2=7
c3=10

p=1.6

b1=12
b2=15
b3=15



E=np.eye(3)

print('''\n Единичная матрица имеет вид:  ''')
print(E)

A = np.array([[a11, a12, a13], [a21, a22, a23], [a31, a32, a33]])

print('''\n Матрица А имеет вид:  ''')
print(A)

diver=E-A
print(f'''матрица Е-А имеет вид:
{diver}

определитель (Е-А)={numpy.linalg.det(diver)}''')

print(
'''\n Матрица полных затрат примет вид: (E-A)^-1  '''
)

FullCostMatrix = np.linalg.inv(E-A)
np.set_printoptions(precision=3)
print(FullCostMatrix)

print(
f'''\n  Отсюда следует, что к примеру для выпуска одной единицы конечной продукции
цехами 1,2,3 необходимо затратить валовой продукции цеха 2 соответственно {FullCostMatrix[1][:3]} единиц    
'''
)

print('\n   Определим валовый выпуск продукции цехами: X=(E-A)^-1*Y')
Y=np.array([y1, y2, y3])
X=np.dot(FullCostMatrix,Y)
print(f'   X={X} Есть вектор функций по цехам')


print(
f'''\nв) Производственную программу цехов определим из соотношения Леонтьева Xij=Aij*xj   
'''
)

x11 = a11*X[0];   x12 = a12*X[1];   x13 = a13*X[2]
x21 = a21*X[0];   x22 = a22*X[1];   x23 = a23*X[2]
x31 = a31*X[0];   x32 = a32*X[1];   x33 = a33*X[2]
xv=np.array([[x11,x12,x13],[x21,x22,x23],[x31,x32,x33]])
print(f''' XV:
{xv}

''')

print(
f'''\nг) Коэффициенты косвенных затрат найдём как разность между соответствующими кэфиициентами
полных и прямых затрат ((E-A)^-1)-A  ''')
G=FullCostMatrix-A
print(G)

print(
f'''\n д) Находим суммарные расходы сырья, топлива и трудовых ресурсов на выполнение плана Х
В нашем случае расходная матрица В имеет вид:''')
B = np.array([[b11,b12,b13],[b21,b22,b23],[b31, b32, b33],[b1,b2,b3]])
print(B)

print(
f'''\nТогда суммарные расходы на выполнение плана Х составят В*Х:''')
print(np.dot(B, X))

print(
f'''\nе) Вычислим коэффициенты затрат сырья, топлива, и трудовых ресурсов на единицу конечной продукции:'''
)
punkt_E =np.dot(B,FullCostMatrix)
print(f'{punkt_E}')

print(
f'''\nж) расходы сырья, топлива и трудовых ресурсов по каждому цеху получим следующим образом:
B*матрицу из иксов из действия в)'''
)

j=np.dot(B,xv)
print(j)

print(
f'''\nз) Производственные затраты по цехам из произведения матрицы из с1, с2,с3,р и пункта Е
 равны: 
''')

costs = np.array([c1, c2, c3, p])

z_res = np.dot(costs, j)
print(z_res)
sum=0
for i in z_res:
    sum+=i
print(
f'''\nРасходы на всю производственную программу составят {z_res[0]}+{z_res[1]}+{z_res[2]} ={sum} ''')

print(
f'''\nи) Производственные затраты на единицу конечной продукции необходимые
 для определения её себестоимости по цехам равны:''')
print(np.dot(costs,punkt_E))
